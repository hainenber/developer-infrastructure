jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin\n"
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  clouds:
    - docker:
        dockerApi:
          connectTimeout: 60
          dockerHost:
            uri: "tcp://docker:2375"
          readTimeout: 60 
        name: "docker"
        exposeDockerHost: true
        templates:
          - connector: "attach"
            dockerTemplateBase:
              image: "docker-registry:5000/jenkins-agent-for-golang"
            labelString: "docker"
            name: "jenkins-agent-for-golang"
            pullStrategy: PULL_ALWAYS
            pullTimeout: 300

credentials:
  system:
    domainCredentials:
      - credentials:
        - usernamePassword:         
            description: "GitHub's PAT, allow Jenkins to access personal private repositories"
            id: "hainenber_personal_access_token"
            scope: GLOBAL
            username: "hainenber"
            password: ${readFile:/run/secrets/jcasc-secrets}
            usernameSecret: true

jobs:
  - script: |
      pipelineJob('hetman-ci') {
        definition {
          cps {
            script("""
              pipeline {
                agent {
                  label 'docker'
                }
                stages {
                  stage('Checkout') {
                    steps {
                      git url: 'https://github.com/hainenber/hetman.git', branch: 'main', credentialsId: 'hainenber_personal_access_token'
                    }
                  }
                  stage('Build') {
                    steps {
                      sh 'mkdir bin && go build -o bin ./...'
                      archiveArtifacts artifacts: 'bin/*', fingerprint: true
                    }
                  }
                  stage('Test') {
                    steps {
                      sh 'go test -timeout 2m -cover ./...'
                    }
                  }
                }
              }
            """.stripIndent())
          }
        }
      }
